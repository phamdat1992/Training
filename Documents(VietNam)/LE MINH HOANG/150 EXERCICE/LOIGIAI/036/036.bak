program Bai2;
const
  InputFile  = 'PARTY.INP';
  OutputFile = 'PARTY.OUT';
  max = 20;
var
  a: array[1..max, 1..max] of Boolean;
  x: array[1..max + 1] of Integer;
  Free: array[1..max] of Boolean;
  s: array[1..max] of String;
  n: Integer;
  Found: Boolean;

function Check(S1, S2: String): Boolean;
var
  S: Set of Char;
  i: Integer;
begin
  S := [];
  for i := 1 to Length(S1) do S := S + [S1[i]];
  for i := 1 to Length(S2) do
    if S2[i] in S then
      begin
        Check := True; Exit;
      end;
  Check := False;
end;

procedure Enter;
var
  f: Text;
  i, j: Integer;
  c: Char;
begin
  Assign(f, InputFile); Reset(f);
  Readln(f, n);
  for i := 1 to n do Readln(f, S[i]);
  Close(f);
  for i := 1 to n do
    for j := 1 to n do
      begin
        a[i, j] := Check(S[i], S[j]);
        a[j, i] := a[i, j];
      end;
  FillChar(Free, SizeOf(Free), True);
  x[1] := 1; Free[1] := False;
  Found := n < 2;
end;

procedure PrintResult;
var
  f: Text;
  i: Integer;
begin
  Assign(f, OutputFile); Rewrite(f);
  if not Found then Writeln(f, 'NO SOLUTION')
  else
    for i := 1 to n do Writeln(f, x[i]);
  Close(f);
end;

procedure Try(i: Integer);
var
  j: Integer;
begin
  for j := 1 to n do
   if Free[j] and a[j, x[i - 1]] then
     begin
       x[i] := j;
       if i < n then
         begin
           Free[j] := False;
           Try(i + 1);
           if Found then Exit;
           Free[j] := True;
         end
       else
         if a[j, 1] then
           begin
             Found := True;
             PrintResult;
           end;
     end;
end;

begin
  Enter;
  if not Found then Try(2);
  if not Found then PrintResult;
end.
